DROP DATABASE IF EXISTS go_retail_db;

CREATE DATABASE go_retail_db;

USE go_retail_db;

CREATE TABLE IF NOT EXISTS Departments(
    ID INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
    Name VARCHAR(127) NOT NULL UNIQUE,
    TotalSalesWeekDept FLOAT DEFAULT(0) NOT NULL,
	Created_at TIMESTAMP DEFAULT(NOW()),
	Updated_at TIMESTAMP DEFAULT(NOW()),

    
	INDEX(ID),
    
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS Managers(
    ID INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
    FirstName VARCHAR(127) NOT NULL,
    LastName VARCHAR(127) NOT NULL,
    DepartmentID VARCHAR(36),
	Created_at TIMESTAMP DEFAULT(NOW()),
	Updated_at TIMESTAMP DEFAULT(NOW()),

    
    INDEX(ID),
    INDEX(DepartmentID),
    
    FOREIGN KEY(DepartmentID)
    REFERENCES Departments(ID)
    ON UPDATE CASCADE ON DELETE RESTRICT,
    
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS Aisles(
    ID INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	DepartmentID VARCHAR(36) NOT NULL,
    Created_at TIMESTAMP DEFAULT(NOW()),
	Updated_at TIMESTAMP DEFAULT(NOW()),


    INDEX(ID),
    INDEX(DepartmentID),
    
    FOREIGN KEY(DepartmentID)
    REFERENCES Departments(ID)
    ON UPDATE CASCADE ON DELETE RESTRICT,
    
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS Items(
    ID INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
    Name VARCHAR(127) NOT NULL UNIQUE,
    Price FLOAT NOT NULL,
    Qty INT NOT NULL,
	Category VARCHAR(127) NOT NULL DEFAULT("NONE"),
    Promotion BOOLEAN DEFAULT(FALSE) NOT NULL,
    PromotionPrice FLOAT DEFAULT(0) NOT NULL,
    Replenish BOOLEAN DEFAULT(FALSE) NOT NULL,
    TotalSalesWeekItem FLOAT DEFAULT(0) NOT NULL,
    AisleID VARCHAR(36) NOT NULL,
    DepartmentID VARCHAR(36) NOT NULL,
	Created_at TIMESTAMP DEFAULT(NOW()),
	Updated_at TIMESTAMP DEFAULT(NOW()),

    INDEX(ID),
    INDEX(AisleID, DepartmentID),
    
    FOREIGN KEY(AisleID)
    REFERENCES Aisles(ID)
    ON UPDATE CASCADE ON DELETE RESTRICT,
    
    FOREIGN KEY(DepartmentID)
    REFERENCES Departments(ID)
    ON UPDATE CASCADE ON DELETE RESTRICT,
    
    PRIMARY KEY(ID)
);